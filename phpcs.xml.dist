<?xml version="1.0"?>
<ruleset name="WordPress Theme Coding Standards">
	<!-- See https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
	<!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards -->
	<!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki -->
	<!-- See https://github.com/wimg/PHPCompatibility -->

	<!-- Set a description for this ruleset. -->
	<description>A custom set of code standard rules to check for WordPress themes.</description>


	<!--
	#############################################################################
	COMMAND LINE ARGUMENTS
	https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
	#############################################################################
	-->

	<!-- Pass some flags to PHPCS:
		 p flag: Show progress of the run.
		 s flag: Show sniff codes in all reports.
		 v flag: Print verbose output.
		 n flag: Do not print warnings.
	-->
	<arg value="psvn"/>

	<!-- Check up to 8 files simultanously. -->
	<arg name="parallel" value="8"/>

	<!-- Only check the PHP files JS files are checked separately with ESLint. -->
	<arg name="extensions" value="php"/>
	<!-- to colorize, this is the argument to include -->
	<arg name="colors"/>
	 <!--
    You can hard-code custom php.ini settings into your custom standard.
    The following tag sets the memory limit to 64M.
 -->
 	<ini name="memory_limit" value="128M"/>

	<!-- Check all files in this directory and the directories below it. -->
	<file>.</file>

	<exclude-pattern>/Applications/MAMP/htdocs/jonessign.co/wp-content/themes/wprig/node_modules/*</exclude-pattern>
	<exclude-pattern>/Applications/MAMP/htdocs/jonessign.co/wp-content/themes/wprig/vendor/*</exclude-pattern>
	<exclude-pattern>/Applications/MAMP/htdocs/jonessign.co/wp-content/themes/wprig/vendor/*</exclude-pattern>
	<exclude-pattern>/Applications/MAMP/htdocs/jonessign.co/wp-content/plugins/*</exclude-pattern>
	<exclude-pattern>/Applications/MAMP/htdocs/jonessign.co/wp-content/uploads/*</exclude-pattern>
	<exclude-pattern>/Applications/MAMP/htdocs/jonessign.co/wp-includes/*</exclude-pattern>
	<exclude-pattern>/Applications/MAMP/htdocs/jonessign.co/wp-admin/*</exclude-pattern>

	<!--
	#############################################################################
	USE THE WordPress-Coding-Standards RULESET
	#############################################################################
	-->

	<rule ref="WordPress"/>
	<rule ref="WordPress-Core" />
	<rule ref="WordPress-Docs" />
	<rule ref="WordPress-Extra" />

	<!--
	#############################################################################
	SNIFF SPECIFIC CONFIGURATION
	#############################################################################
	-->

	<!-- Verify that the text_domain is set to the desired text-domain.
		 Multiple valid text domains can be provided as a comma-delimited list. -->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="wp-rig"/>
		</properties>
	</rule>

	<!-- Allow for theme specific exceptions to the file name rules based
		 on the theme hierarchy and ensure PSR-4 autoloading compatibility. -->
	<rule ref="WordPress.Files.FileName">
		<properties>
			<property name="strict_class_file_names" value="false" />
			<property name="is_theme" value="true"/>
		</properties>
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
	</rule>

	<rule ref="PEAR">
		<exclude name="PEAR.Classes.ClassDeclaration.OpenBraceNewLine"/>
		<exclude name="PEAR.Commenting.ClassComment.MissingAuthorTag"/>
		<exclude name="PEAR.Commenting.ClassComment.MissingCategoryTag"/>
		<exclude name="PEAR.Commenting.ClassComment.MissingLicenseTag"/>
		<exclude name="PEAR.Commenting.ClassComment.MissingLinkTag"/>
		<exclude name="PEAR.Commenting.ClassComment.MissingPackageTag"/>
		<exclude name="PEAR.Commenting.FileComment.MissingAuthorTag"/>
		<exclude name="PEAR.Commenting.FileComment.MissingCategoryTag"/>
		<exclude name="PEAR.Commenting.FileComment.MissingLicenseTag"/>
		<exclude name="PEAR.Commenting.FileComment.MissingLinkTag"/>
		<exclude name="PEAR.Commenting.FileComment.MissingVersion"/>
		<exclude name="PEAR.Commenting.FunctionComment.MissingReturn"/>
		<exclude name="PEAR.ControlStructures.MultiLineCondition.SpacingAfterOpenBrace"/>
		<exclude name="PEAR.Functions.FunctionDeclaration.SpaceAfterFunction"/>
		<exclude name="PEAR.Functions.FunctionDeclaration.BraceOnSameLine"/>
		<exclude name="PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps"/>
		<exclude name="PEAR.WhiteSpace.DisallowTabIndent.TabsUsed"/>
		<exclude name="PEAR.WhiteSpace.ScopeIndent.IncorrectExact"/>
		<exclude name="PEAR.Commenting.FileComment.InvalidPackage"/>
		<exclude name="PEAR.Commenting.FileComment.PackageTagOrder"/>
		<exclude name="PEAR.NamingConventions.ValidFunctionName.FunctionNoCapital"/>
		<exclude name="PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid"/>
		<exclude name="PEAR.NamingConventions.ValidFunctionName.FunctionUnderscore"/>
		<!--<exclude name=""/>
		<exclude name=""/> -->
	</rule>


	<!-- Set the minimum supported WP version. This is used by several sniffs.
		 The minimum version set here should be in line with the minimum WP version
		 as set in the "Requires at least" tag in the readme.txt file. -->
	<config name="minimum_supported_wp_version" value="4.5"/>

	<rule ref="WordPress.Arrays.MultipleStatementAlignment">
		<properties>
			<!-- No need to adjust alignment of large arrays when the item with the largest key is removed. -->
			<property name="exact" value="false"/>
			<!-- Don't align multi-line items if ALL items in the array are multi-line. -->
			<property name="alignMultilineItems" value="!=100"/>
			<!-- Array assignment operator should always be on the same line as the array key. -->
			<property name="ignoreNewlines" value="false"/>
		</properties>
	</rule>

	<!--
	#############################################################################
	USE THE PHPCompatibility RULESET
	#############################################################################
	-->

	<config name="testVersion" value="7.0-99.0"/>
	<!-- <rule ref="PHPCompatibility" /> -->

	<!-- Tabs should represent 4 spaces. -->
	<!-- <arg name="tab-width" value="4"/> -->

	<!-- Lines can be 180 chars long, but never show errors -->
	<rule ref="Generic.Files.LineLength">
		<properties>
			<property name="lineLimit" value="240"/>
			<property name="absoluteLineLimit" value="280"/>
			<property name="ignoreComments" value="true"/>
		</properties>
	</rule>
 <!--
    Here we change two messages from the same sniff. Note how the
    codes are slightly different because the sniff developer has
    defined both a MaxExceeded message and a TooLong message. In the
    case of this sniff, one is used for warnings and one is used
    for errors.
 -->
 <rule ref="Generic.Files.LineLength.MaxExceeded">
  <message>Line contains %2$s chars, which is more than the limit of %1$s</message>
 </rule>
 <rule ref="Generic.Files.LineLength.TooLong">
  <message>Line longer than %s characters; contains %s characters</message>
 </rule>

</ruleset>
